{"version":3,"file":"static/js/956.71aab52c.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Dialogs/Dialog/Dialog.module.scss?65ce","components/Dialogs/Dialog/Dialog.tsx","webpack://social-network/./src/components/Dialogs/Message/Message.module.scss?a735","components/Dialogs/Message/Message.tsx","webpack://social-network/./src/components/Dialogs/Dialogs.module.scss?d037","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__KmWt2\",\"dialogLink\":\"Dialog_dialogLink__yC8Aj\",\"active\":\"Dialog_active__379ih\"};","import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IDialog } from '../../../interfaces';\r\nimport s from './Dialog.module.scss';\r\n\r\nconst Dialog: FC<IDialog> = (props) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink\r\n        to={`/dialogs/${props.id}`}\r\n        className={({ isActive }) => (isActive ? s.active : s.dialogLink)}\r\n      >\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__lzZq3\"};","import React, { FC } from 'react';\r\nimport { IMessageProps } from '../../../interfaces';\r\nimport s from './Message.module.scss';\r\n\r\nconst Message: FC<IMessageProps> = (props) => {\r\n  return <div className={s.message}>{props.text}</div>;\r\n};\r\n\r\nexport default Message;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__RNcyk\",\"title\":\"Dialogs_title__8C0F4\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__OLfKY\",\"messagesWrapper\":\"Dialogs_messagesWrapper__sz4JW\",\"messageBlock\":\"Dialogs_messageBlock__Nz6Un\",\"message\":\"Dialogs_message__F69ZF\",\"newMessage\":\"Dialogs_newMessage__m1kLP\",\"newMessageInput\":\"Dialogs_newMessageInput__YJRvX\",\"btn\":\"Dialogs_btn__wuXyc\",\"errors\":\"Dialogs_errors__bn7zn\",\"form\":\"Dialogs_form__VPdXH\"};","import React, { FC } from 'react';\r\nimport { IDialogsProps } from '../../interfaces';\r\nimport { Field, Form, Formik, FormikValues } from 'formik';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport s from './Dialogs.module.scss';\r\n\r\nconst Dialogs: FC<IDialogsProps> = (props) => {\r\n  const dialogElements = props.state.dialogs.map((dialog) => (\r\n    <Dialog id={dialog.id} name={dialog.name} key={dialog.id} />\r\n  ));\r\n  const messageElements = props.state.messages.map((message) => (\r\n    <Message text={message.message} key={message.id} />\r\n  ));\r\n\r\n  return (\r\n    <section className={s.dialogs}>\r\n      <div className={s.dialogsWrapper}>\r\n        <h3 className={s.title}>Dialogs</h3>\r\n        {dialogElements}\r\n      </div>\r\n      <div className={s.messagesWrapper}>\r\n        <h3 className={s.title}>Name</h3>\r\n        <div className={s.messageBlock}>{messageElements}</div>\r\n        <AddMessageForm sendMessage={props.sendMessage} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport interface IInitialValues {\r\n  messageText: string;\r\n}\r\nexport interface IErrors {\r\n  messageText?: string;\r\n}\r\nexport interface IAddMessageFormProps {\r\n  sendMessage: (messageText: string) => void;\r\n}\r\nconst AddMessageForm: FC<IAddMessageFormProps> = ({ sendMessage }) => {\r\n  const initialValues: IInitialValues = {\r\n    messageText: '',\r\n  };\r\n  const validate = (values: FormikValues) => {\r\n    const errors: IErrors = {};\r\n\r\n    if (values.messageText.length > 300) {\r\n      errors.messageText = 'Max length 300';\r\n    }\r\n    return errors;\r\n  };\r\n  return (\r\n    <div className={s.newMessage}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={(values: FormikValues) => validate(values)}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          const { messageText } = values;\r\n          sendMessage(messageText);\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({ isSubmitting, touched, errors }) => (\r\n          <Form className={s.form}>\r\n            <Field\r\n              type=\"textarea\"\r\n              name=\"messageText\"\r\n              id=\"messageText\"\r\n              placeholder=\"input your message\"\r\n              className={s.newMessageInput}\r\n            />\r\n            {touched.messageText && errors.messageText && (\r\n              <div className={s.errors}>{errors.messageText}</div>\r\n            )}\r\n\r\n            <button type=\"submit\" disabled={isSubmitting} className={s.btn}>\r\n              send\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import React, { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { EmptyObject } from 'redux';\r\nimport { IAuthState, IMapStateAuth } from '../interfaces';\r\n\r\nconst mapState = (\r\n  state: EmptyObject & {\r\n    authReducer: IAuthState;\r\n  }\r\n) => {\r\n  return {\r\n    isAuth: state.authReducer.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component: ComponentType) => {\r\n  const RedirectComponent = (props: IMapStateAuth) => {\r\n    const { isAuth, ...restProps } = props;\r\n    if (!isAuth) {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n    return <Component {...restProps} />;\r\n  };\r\n  const ConnectedAuthRedirectComponent = connect(mapState)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { compose, Dispatch, EmptyObject } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { IActionType, IAuthState, IDialogsState, IProfileState } from '../../interfaces';\r\nimport { sendMessageCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nconst mapState = (\r\n  state: EmptyObject & {\r\n    dialogsReducer: IDialogsState;\r\n    profileReducer: IProfileState;\r\n    authReducer: IAuthState;\r\n  }\r\n) => {\r\n  return {\r\n    state: state.dialogsReducer,\r\n    isAuth: state.authReducer.isAuth,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch: Dispatch<IActionType>) => {\r\n  return {\r\n    sendMessage: (messageText: string) => {\r\n      dispatch(sendMessageCreator(messageText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapState, mapDispatch),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["props","className","s","to","id","isActive","name","text","AddMessageForm","sendMessage","initialValues","messageText","validate","values","errors","length","onSubmit","setSubmitting","resetForm","isSubmitting","touched","type","placeholder","disabled","dialogElements","state","dialogs","map","dialog","messageElements","messages","message","mapState","isAuth","authReducer","compose","connect","dialogsReducer","dispatch","sendMessageCreator","Component","restProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","Dialogs"],"sourceRoot":""}